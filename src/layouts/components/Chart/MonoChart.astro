---
import "../../../styles/additional/MonoChart.scss";
import { CnMasters }  from "../../../db/masters/AllMasterDb";
import config from "../../../config/config.json";
import {
  getLangFromUrl,
  getTranslations,
  supportedLang,
  slugSelector,
} from "../../../lib/utils/languageParser";
import type { ContentEntryMap } from "astro:content";

export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

let lang = getLangFromUrl(Astro.url);

const disabledLanguages = config.settings.disable_languages as string[];
if (disabledLanguages.includes(lang)) {
  lang = config.settings.default_language;
}

const flatMasterData = CnMasters.flat();
const masterData = flatMasterData.map(master=>
  ({
    id: master.id,
    level: (master.id + '')?.slice(0, (master.id + '')?.indexOf('.')),
    name: master.name_en,
    disciples: master.disciples?.map(disciple => ({
      id: flatMasterData.find(person => person.name_en === disciple)?.id,
      level: (master.id + '')?.slice(0, (master.id + '')?.indexOf('.')) +1,
      name: flatMasterData.find(person => person.name_en === disciple)?.name_en,
      disciples: disciple.disciples?.map(who => ({
        id: flatMasterData.find(person => person.name_en === who)?.id,
        level: (master.id + '')?.slice(0, (master.id + '')?.indexOf('.')) +1,
        name: flatMasterData.find(person => person.name_en === who)?.name_en,
      })),
    }))
  })
);
---


{
  CnMasters?.map(data=>
  <div class="tree">
    <ul>
      {
        data.map(master =>
          <li>
            <a href="#">{master.name_en}</a>
            <ul>
              {
                master.disciples?.map(disciple =>
                  <li>
                    <a href="#">{disciple}</a>
                  </li>
                )
              }
            </ul>
          </li>
        )
      }
    </ul>
  </div>
    )
  }
