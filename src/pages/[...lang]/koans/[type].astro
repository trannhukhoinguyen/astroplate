---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import { supportedLang } from "@/lib/utils/languageParser";
import { sortByDate } from "@/lib/utils/sortFunctions";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";
import KoanPlanet from "../../../layouts/components/KoanPlanet.astro";

// get all static paths for types
export async function getStaticPaths() {
  const { default_language } = config.settings;

  const paths = await Promise.all(
    supportedLang.map(async (lang) => {
      const types = await getTaxonomy(
        lang as keyof ContentEntryMap,
        "types"
      );

      return types.map((type) => ({
        params: {
          lang: lang || undefined,
          type: type,
        },
        props: {
          type,
        },
      }));
    })
  );

  // Handle default path (no lang)
  const defaultTypes = await getTaxonomy(
    default_language as keyof ContentEntryMap,
    "types"
  );
  const defaultPaths = defaultTypes.map((type) => ({
    params: {
      lang: undefined,
      type: type,
    },
    props: {
      type,
    },
  }));

  return [...paths.flat(), ...defaultPaths];
}

const { type, lang } = Astro.params;

// get posts by type
const posts = await getSinglePage("koans", lang as keyof ContentEntryMap);
const filterByTypes = taxonomyFilter(posts, "types", type!);
const sortedPosts = sortByDate(filterByTypes);
---

<Base title={type}>
  <PageHeader title={type} />
  <div class="section-sm pb-0">
    <div class="container">
      <div class="row">
        {
          sortedPosts.map((post) => (
            <div class="mb-14 md:col-6 lg:col-4">
              <KoanPlanet data={post} slugDefault={"koans"} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</Base>
