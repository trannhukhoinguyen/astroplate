---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getAllTaxonomy, getTaxonomy } from "@/lib/taxonomyParser.astro";
import { slugSelector, supportedLang } from "@/lib/utils/languageParser";
import { humanize } from "@/lib/utils/textConverter";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import { getListPage, getSinglePage } from "@/lib/contentParser.astro";
import { supportedLang } from "@/lib/utils/languageParser";
import { sortByDate } from "@/lib/utils/sortFunctions";
import PostSidebar from "@/partials/PostSidebar.astro";

const { default_language } = config.settings;
export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

let { lang } = Astro.params;
if (!lang) {
  lang = default_language;
}
const postIndex = await getListPage(
  "koans",
  lang as keyof ContentEntryMap
);
const langCollection: keyof ContentEntryMap = lang as keyof ContentEntryMap;
const posts = await getSinglePage("koans", lang as keyof ContentEntryMap);
const tags = await getTaxonomy(langCollection, "tags");
const sortedPosts = sortByDate(posts);
const totalPages: number = Math.ceil(posts.length / config.settings.pagination);
const currentPosts = sortedPosts.slice(0, config.settings.pagination);
const types = await getTaxonomy(langCollection, "types");
const allTypes = await getAllTaxonomy(langCollection, "types");
---

<Base
  title={postIndex[0].data.title}
  meta_title={postIndex[0].data.meta_title}
  image={postIndex[0].data.image}
  description={postIndex[0].data.description}
>
  <PageHeader title={postIndex[0].data.title} />
  <section class="section">
    <div class="container">
      <div class="row gx-5">
        <!-- posts -->
        <div class="lg:col-8">
          <div class="row">
            {
              currentPosts.map((post) => (
                <div class="mb-14 md:col-6">
                  <BlogCard data={post} slugDefault="koans" />
                </div>
              ))
            }
          </div>
          <Pagination
            section={"koans"}
            currentPage={1}
            totalPages={totalPages}
          />

          <!-- sidebar -->
          <PostSidebar
            types={types}
            tags={tags}
            allTypes={allTypes}
          />
        </div>
      </div>
    </div>
  </section>
</Base>
